# Continuous Integration testing for KHARMA
# a.k.a did we break the basics?

# Build on Nvidia image.
# Can pretty easily change this out
# Someday we'll build & push a KHARMA image, then test that
image: nvcr.io/nvidia/nvhpc:22.9-devel-cuda_multi-rockylinux8

variables:
  NPROC: 24
  OMP_NUM_THREADS: 24
  HOST_ARCH: HSW
  MPI_EXE: mpirun
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  GIT_SUBMODULE_STRATEGY: recursive

# Install pyharm for verification before all runs
before_script:
  - nvidia-smi
  - wget -O Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
  - bash Miniforge3.sh -b -p "/home/conda"
  - source "/home/conda/etc/profile.d/conda.sh"
  - conda install h5py
  - git clone https://github.com/AFD-Illinois/pyharm.git /home/pyharm
  - conda activate
  - cd /home/pyharm
  - pip install --user .
  - cd -

# Tests can be executed in parallel,
# but be careful about GPU arch
stages:
  - build
  - tests

build:
  stage: build
  script:
    - export PREFIX_PATH=$PWD/external/hdf5
    - ./make.sh clean cuda hdf5
  artifacts:
    paths:
      - kharma.*
      - make_args

convergence:
  stage: tests
  script:
    # Always run all scripts, but
    # record any errors
    - exit_code=0
    - cd tests/bondi/
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../mhdmodes
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../emhdmodes
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - exit $exit_code
  artifacts:
    when: always
    paths:
      - tests/*/*.png
      - tests/*/*.hst
      - tests/*/*.txt

regression:
  stage: tests
  script:
    - exit_code=0
    - cd tests/noh
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../bz_monopole
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../tilt_init
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../restart
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - cd ../reinit
    - bash run.sh || exit_code=$?
    - bash check.sh || exit_code=$?
    - exit $exit_code
  artifacts:
    when: always
    paths:
      - tests/*/*.png
      - tests/*/*.hst
      - tests/*/*.txt

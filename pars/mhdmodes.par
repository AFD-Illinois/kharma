# GRMHD Modes problem
# Try to propagate several analytically-amenable linear modes
# of the MHD equations
# Heavily commented as a likely first problem for new users

<parthenon/job>
problem_id = mhdmodes

<mhdmodes>
# 0: entropy wave
# 1: slow mode
# 2: fast mode
# 3: Alfven wave
nmode = 1
# 0: propagate in 3D
# 1: propagate in X2/X3 plane
# 2: propagate in X1/X3 plane
# 3: propagate in X1/X2 plane
dir = 3

# Size and parameters of the full mesh
# KHARMA does not yet support AMR,
# so all mesh declarations will have
# the first two parameters
<parthenon/mesh>
refinement = none
numlevel = 1

nx1 = 1024
x1min = 0.0
x1max = 1.0
ix1_bc = periodic
ox1_bc = periodic

nx2 = 1024
x2min = 0.0
x2max = 1.0
ix2_bc = periodic
ox2_bc = periodic

nx3 = 1
x3min = 0.0
x3max = 1.0
ix3_bc = periodic
ox3_bc = periodic

# Size of a mesh block
# # of meshblocks must be >= the number of MPI ranks,
# however there may be multiple blocks per rank
<parthenon/meshblock>
nx1 = 1024
nx2 = 1024
nx3 = 1

# Set boring box coordinates. Explanations in bondi.par
<coordinates>
base = cartesian_minkowski
transform = null

<parthenon/time>
# tlim will be overridden depending on the problem
tlim = 5.0
integrator = vl2
# Minimum is also the starting timestep
dt_min = 0.0001

<GRMHD>
cfl = 0.9
gamma = 1.333333
# Whether to evolve these variables with an
# implicit solver similar to GRIM
implicit = false

<b_field>
# Use cell-centered Flux-CT for B field transport
solver = flux_ct
implicit = false

<floors>
# Disable all floor applications in this problem
disable_floors = true

<debug>
# General verbosity level:
# 1: general archival info
# 2: specific debugging logs
verbose = 0
# Set to 1 to check each step for wavespeed of zero/NaN & exit
extra_checks = 1
# Print summary of all flags hit during each step:
# 1: Number of flags total
# 2: Number of flags of each type
flag_verbose = 0

<driver>
# Driver, of type "kharma" or "imex".  The former
# Synchronizes mostly the conserved variables,
# the latter synchronizes primitives.
type = simple
reconstruction = weno5

# Primary HDF5 output enabled in most problems
<parthenon/output0>
file_type = hdf5
# This is so as to output only the final state
dt = 0.01
single_precision_output = true
variables = prims.rho, prims.u, prims.uvec, prims.B

# Text file with statistics (e.g. fluxes, floors hit)
# recorded over time
<parthenon/output1>
file_type = hst
dt = 0.1


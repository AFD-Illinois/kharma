# SANE model using FOFC: how low can the floors go?
# This setup tries to avoid floors at all costs:
# The only floors used are geometric, and very low.
# Reconstruction fallbacks and first-order corrections
# are used to avoid hitting them unless necessary.
# When they are hit, material is added in normal
# frame, requiring a 1Dw primitive variable recovery,
# which fails anywhere interesting, leading to "fixup"
# via averaging adjacent zones.
# The result is a tiny trickle of density floor,
# with all other problematic zones fixed via FOFC or
# averaging.
# Resulting funnel density: ~1e-9, sigma: ~1e6

<parthenon/job>
problem_id = torus

<parthenon/mesh>
nx1 = 128
nx2 = 128
nx3 = 1

<parthenon/meshblock>
nx1 = 128
nx2 = 128
nx3 = 1

<coordinates>
base = spherical_ks
transform = mks
r_out = 50
a = 0.9375

<parthenon/time>
tlim = 3000.0
nlim = -1
integrator = rk2

<debug>
verbose = 1
extra_checks = 1
flag_verbose = 2

<GRMHD>
cfl = 0.9
gamma = 1.666667

<flux>
type = llf
reconstruction = weno5
# Fall back to PPM when reconstruction would hit floor
reconstruction_fallback = true

<driver>
type = kharma

<torus>
rin = 6.0
rmax = 12.0

<perturbation>
u_jitter = 0.04

<b_field>
solver = face_ct
type = sane
beta_min = 100.

<floors>
frame = normal
rho_min_geom = 1e-8
u_min_geom = 1e-8
rho_min_const = 1e-20
u_min_const = 1e-20
gamma_max = 50

<fofc>
on = true
eh_buffer = 0.01
consistent_face_b = false

<parthenon/output0>
file_type = hdf5
dt = 5.0
single_precision_output = true
variables = prims, jcon, pflag, fflag, fofcflag

<parthenon/output1>
file_type = rst
dt = 100.0

<parthenon/output2>
file_type = hst
dt = 0.1
variables = all_reductions

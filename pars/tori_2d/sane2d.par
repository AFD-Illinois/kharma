# SANE model in 2D
# Overall simulation size 50M, to allow
# running at small scale on e.g. a laptop
# Uses MKS coordinates, not Funky variant

<parthenon/job>
problem_id = torus

<parthenon/mesh>
nx1 = 128
nx2 = 128
nx3 = 1

<parthenon/meshblock>
nx1 = 128
nx2 = 64
nx3 = 1

<coordinates>
base = spherical_ks
transform = fmks
r_out = 50
a = 0.9375
hslope = 0.3
mks_smooth = 0.5
poly_xt = 0.82
poly_alpha = 14.0

<parthenon/time>
tlim = 3000.0
nlim = -1
integrator = vl2

<debug>
verbose = 1
extra_checks = 1
flag_verbose = 0

<GRMHD>
cfl = 0.9
gamma = 1.666667
reconstruction = weno5

<b_field>
solver = flux_ct

<driver>
type = kharma

<torus>
rin = 6.0
rmax = 12.0

<perturbation>
u_jitter = 0.04

<b_field>
type = sane
beta_min = 100.

<floors>
rho_min_geom = 1e-5
u_min_geom = 1e-7
u_over_rho_max = 100
bsq_over_rho_max = 100

<parthenon/output0>
file_type = hdf5
dt = 10.0
single_precision_output = true
# Fields beginning with a specifier here will be included (e.g., all prims.XXX)
# Fields specified but not present are silently skipped
# If you need a line break, use '&' at line end
variables = prims, jcon, pflag, fflag

<parthenon/output1>
file_type = rst
dt = 100.0

<parthenon/output2>
file_type = hst
dt = 0.1
variables = all_reductions

# This outputs a geometry file, similar to iharm3d's old 'grid.h5'
# Not needed for pyharm analysis in Kerr metrics, but useful in
# a bunch of other contexts.
<parthenon/output3>
file_type = hdf5
analysis_output = true
dt = 1e20
single_precision_output = false
# If you want the convenience and hate disk space, you can add these
# variables to "normal" dump files like output0 too.
variables = coords.Xnative, coords.Xsph, &
            coords.gcon, coords.gcov, coords.gdet, coords.lapse, coords.conn, &
            coords.gcon_embed, coords.gcov_embed, coords.gdet_embed
